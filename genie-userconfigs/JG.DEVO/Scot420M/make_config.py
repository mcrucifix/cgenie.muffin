# Justin Gerard - 6 June 2023
# This code allows to create user-config file for the Devonian very easlily for different value of pCO2, pO2 and PO4
# The reminerlization scheme is NOT T-dep and the rest is taken from a config given by Alex Pohl. 

pCO2_dic = {"01":"280", "02":"560", "04":"1120", "08":"2240", "16":"4480", "32":"8960"}
PO4_dic = {"1.00":"2.159", "1.25":"2.69875", "1.50":"3.2385", "1.75":"3.77825", "2.00":"4.318", "2.50":"5.3975", "3.00":"6.477"}

def Make_user_config(pCO2, PO4, pO2):
	f=open("JG.Scot420M."+pCO2+"X_"+PO4+"PO4_"+pO2+"O2.SPIN",'w')
	f.write("# *******************************************************************\n")
	f.write("# *** USERCONFIG for JG.Scot420M."+pCO2+"X_"+PO4+"PO4_"+pO2+"O2.SPIN *************\n")
	f.write("# *******************************************************************\n")
        f.write("#\n")
        f.write("# *** CLIMATE *******************************************************\n")
        f.write("#\n")
        f.write("# set climate feedback (climate responding to changing pCO2)\n")
        f.write("ea_36=y\n")
        f.write("#\n")
        f.write("# *** BIOLOGICAL NEW PRODUCTION *************************************\n")
        f.write("#\n")
        f.write("# *** recommended ***************************************************\n")
        f.write("# biological scheme ID string\n")
        f.write("bg_par_bio_prodopt=\"bio_P\"\n")
        f.write("# biological uptake time-scale\n")
        f.write("bg_par_bio_tau=63.3827\n")
        f.write("# [PO4] M-M half-sat value (mol kg-1)\n")
        f.write("bg_par_bio_c0_PO4=0.10E-06\n")
        f.write("# *** published paleo configuration *********************************\n")
        f.write("bg_par_bio_prodopt=\"1N1T_PO4MM\"\n")
        f.write("bg_par_bio_k0_PO4=8.9876e-006\n")
        f.write("bg_par_bio_c0_PO4=8.9369e-007\n")
        f.write("# *** Crichton et al. [2020] calibration ****************************\n")
        f.write("# NOTE: light limitation term is different in biological scheme 1N1T_PO4MM_Tdep compared to bio_P\n")
        f.write("###bg_par_bio_prodopt='1N1T_PO4MM_Tdep'\n")
        f.write("###bg_par_bio_mu1=10\n")
        f.write("###bg_par_bio_c0_PO4=8.9369e-007\n")
        f.write("#\n")
        f.write("# *** ORGANIC MATTER EXPORT RATIOS **********************************\n")
        f.write("#\n")
        f.write("# production fraction of dissolved organic matter\n")
        f.write("bg_par_bio_red_DOMfrac=0.66\n")
        f.write("#\n")
        f.write("# *** INORGANIC MATTER EXPORT RATIOS ********************************\n")
        f.write("#\n")
        f.write("# fixed CaCO3:POC\n")
        f.write("bg_opt_bio_CaCO3toPOCrainratio='FIXED'\n")
        f.write("# underlying export CaCO3 as a proportion of particulate organic matter (i.e., CaCO3/POC)\n")
        f.write("#bg_par_bio_red_POC_CaCO3=0.200\n")
        f.write("# *** alternative for > 200 Ma **************************************\n")
        f.write("bg_par_bio_red_POC_CaCO3=0.0\n")
        f.write("#\n")
        f.write("# *** REMINERALIZATION **********************************************\n")
        f.write("#\n")
        f.write("# *** recommended ***************************************************\n")
        f.write("# set 'instantaneous' water column remineralziation\n")
        f.write("bg_par_bio_remin_sinkingrate_physical=9.9E9\n")
        f.write("bg_par_bio_remin_sinkingrate_reaction=125.0\n")
	f.write("# *** common settings ***********************************************\n")
        f.write("# DOC lifetime (yrs)\n")
        f.write("bg_par_bio_remin_DOMlifetime=0.5\n")
        f.write("# initial fractional abundance of POC component #2\n")
        f.write("bg_par_bio_remin_POC_frac2=0.0557\n")
        f.write("# depth of remineralization or particulate organic matter\n")
        f.write("bg_par_bio_remin_POC_eL1=589.9451\n")
        f.write("# remineralization length #2 for POC\n")
        f.write("bg_par_bio_remin_POC_eL2=1000000.0\n")
        f.write("# initial fractional abundance of CaCO3 component #2\n")
        f.write("bg_par_bio_remin_CaCO3_frac2=0.45\n")
        f.write("# depth of remineralization or CaCO3\n")
        f.write("bg_par_bio_remin_CaCO3_eL1=1.8905e+003\n")
        f.write("# remineralization length #2 for CaCO3\n")
        f.write("bg_par_bio_remin_CaCO3_eL2=1000000.0\n")
        f.write("#\n")
        f.write("# *** DATA SAVING ***************************************************\n")
        f.write("#\n")
        f.write("# BASIC + biology + tracer + proxy diagnostics\n")
        f.write("bg_par_data_save_level=16\n")
        f.write("bg_par_infile_slice_name='save_timeslice_EVERY001000.dat'\n")
        f.write("bg_ctrl_debug_lvl0=.true.\n")
        f.write("ma_debug_loop=1\n")
        f.write("#\n")
        f.write("# *** FORCINGS ******************************************************\n")
        f.write("#\n")
        f.write("# specify forcings -- restoring of atmospheric pCO2 and d13C\n")
        f.write("bg_par_forcing_name=\"JG.DEVO_"+pO2+"O2\"\n")
        f.write("bg_par_atm_force_scale_val_3="+pCO2_dic[pCO2]+".0E-06\n")
        f.write("bg_par_atm_force_scale_val_4=-6.5\n")
        f.write("bg_par_atm_force_scale_val_6=0.2095\n")
        f.write("#\n")
        f.write("# *** MISC **********************************************************\n")
        f.write("#\n")
        f.write("# mean ocean PO4\n")
        f.write("#bg_ocn_init_8=2.159E-06 # default PD value included in the base config\n")
        f.write("bg_ocn_init_8="+PO4_dic[PO4]+"E-06\n")
        f.write("#\n")
        f.write("# age tracer, automatic method\n")
        f.write("bg_ctrl_force_ocn_age=.true.\n")
        f.write("#\n")
        f.write("# *** recommended ***************************************************\n")
        f.write("# maximum time-scale to geochemical reaction completion (days)\n")
        f.write("bg_par_bio_geochem_tau=90.0\n")
        f.write("# extend solubility and geochem constant T range (leave S range as default)\n")
        f.write("gm_par_geochem_Tmin  = -2.0\n")
        f.write("gm_par_geochem_Tmax  = 45.0\n")
	f.write("gm_par_carbchem_Tmin = -2.0\n")
        f.write("gm_par_carbchem_Tmax = 45.0\n")
	f.write("#\n")
	f.write("# Orbital parameters -- modern set => adjust as necessary\n")
	f.write("ea_par_orbit_osce=0.0 # eccentricity\n")
	f.write("ea_par_orbit_oscsob=0.3746066 # sine of obliquity\n")
	f.write("ea_par_orbit_oscgam=0 # longitude of perihelion\n")
	f.write("#\n")
	f.write("# *******************************************************************\n")
	f.write("# *** END ***********************************************************\n")
	f.write("# *******************************************************************\n")
	f.write("#\n")
	f.close()
	return

pCO2 = ["02", "04", "08", "16"]
pO2 = ["0.9", "0.6", "0.3"]
PO4 = ["1.00", "1.25", "1.50", "1.75", "2.00"]

for i in pCO2:
        for j in PO4:
                for k in pO2:
			Make_user_config(i, j, k)		
